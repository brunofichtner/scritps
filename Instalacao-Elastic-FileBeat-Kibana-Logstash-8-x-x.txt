#!/bin/sh
# instale as bibliotecas
apt update 
apt upgrade
apt -y install wget ntp apt-transport-https gnupg unzip curl net-tools default-jre tcpdump

#Instalando elastic search
wget --no-check-certificate https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.6.0-amd64.deb
 dpkg -i elasticsearch-8.6.0-amd64.deb
 systemctl daemon-reload
 systemctl enable elasticsearch.service
 systemctl start elasticsearch.service
 systemctl status elasticsearch.service
 curl -X GET 127.0.0.1:9200
	
# Agora vamos editar o arquivo de configuração do elasticsearch.yml
 nano /etc/elasticsearch/elasticsearch.yml
 
cluster.name: flow-huawei-mikrotik-cisco-juniper-frr
node.name: flow-01
network.host: IP DO SERVIDOR
http.port: 9200

systemctl daemon-reload
systemctl restart elasticsearch.service
systemctl enable elasticsearch.service

 wget --no-check-certificate https://artifacts.elastic.co/downloads/kibana/kibana-8.6.0-amd64.deb
  dpkg -i kibana-8.6.0-amd64.deb
  
 #acessar arquivo de configuração do Kibana
  nano /etc/kibana/kibana.yml
  server.port: 5601
  server.host: "IP DO SERVIDOR"
  server.name: "kibana-flow"
  elasticsearch.hosts: ["http://127.0.0.1:9200"]

#Restart serviços

  systemctl enable kibana.service
  systemctl start kibana.service
  systemctl status kibana.service
  tail -f /var/log/kibana/kibana.log -n 1000

#instalação LogStash
wget --no-check-certificate https://artifacts.elastic.co/downloads/logstash/logstash-8.6.0-amd64.deb

 dpkg -i logstash-8.6.0-amd64.deb
 
 /usr/share/logstash/bin/logstash-plugin install logstash-codec-sflow
 /usr/share/logstash/bin/logstash-plugin update logstash-codec-netflow
 /usr/share/logstash/bin/logstash-plugin update logstash-input-udp
 /usr/share/logstash/bin/logstash-plugin update logstash-input-tcp
 /usr/share/logstash/bin/logstash-plugin update logstash-filter-dns
 /usr/share/logstash/bin/logstash-plugin update logstash-filter-geoip
 /usr/share/logstash/bin/logstash-plugin update logstash-filter-translate
 
 nano /etc/logstash/logstash.yml
 nano /etc/logstash/pipelines.yml
  
systemctl daemon-reload
systemctl enable logstash
systemctl start logstash

# Instalação FileBeat

wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-8.6.0-amd64.deb
dpkg -i filebeat-8.6.0-amd64.deb

# acessar arquivo de configuração do filebeat  /etc/filebeat/filebeat.yml e alterar endereço IP do elastic e kibana

output.elasticsearch:
  # Array of hosts to connect to.
  hosts: ["10.99.98.2:9200"]
  
   # Kibana Host
   host: "10.99.90.2:5601"

# Listar modulos do beats e habilitar
filebeat modules list
filebeat modules enable netflow


# acessar arquivo de configuração netflow alterar endereço ip de escuta.
 nano /etc/filebeat/modules.d/netflow.yml
 - module: netflow
  log:
    enabled: true
    var:
      netflow_host: 10.255.255.244
      netflow_port: 2055
      # internal_networks specifies which networks are considered internal or private
      # you can specify either a CIDR block or any of the special named ranges listed
      # at: https://www.elastic.co/guide/en/beats/filebeat/current/defining-processors.html#condition-network
      internal_networks:
        - private

# restart serviços
 filebeat setup
 systemctl enable filebeat
 service filebeat start
 systemctl restart elasticsearch.service
 
 
 #huawei
ip netstream timeout active 1
ip netstream timeout inactive 15
ip netstream export version 9 origin-as
ip netstream export index-switch 32
ip netstream export template timeout-rate 1
ip netstream sampler fix-packets 1000 inbound
ip netstream sampler fix-packets 1000 outbound
ip netstream export source LOOPBACK
ip netstream export host ELASTICSEARCH 2055
ip netstream export template option sampler

# acessar interface uplink e adicionar comandos abaixo:
 ip netstream inbound
 ip netstream outbound


# CISCO
flow record NETFLOW_RECORD
match ipv4 tos
match ipv4 protocol
match ipv4 source address
match ipv4 destination address
match transport source-port
match transport destination-port
match interface input
collect interface output
collect counter bytes
collect counter packets
!

!
flow exporter NETFLOW_EXPORT
destination X.X.X.X
source FastEthernet0/1/0
transport udp 2055
export-protocol netflow-v5


flow record PP-NETFLOW-REC
		match ipv4 tos
		match ipv4 protocol
		match ipv4 source address
		match ipv4 destination address
		match transport source-port
		match transport destination-port
		match interface input
		collect interface output
		collect counter bytes
		collect counter packets
	!
	flow exporter PP-NETFLOW-EXP
		destination [IP_DO_SERVIDOR_NETFLOW] vrf Mgmt-PP
		source Port-channel1.3920
		transport udp {porta} 
	!
	flow monitor PP-NETFLOW-MONITOR
		exporter PP-NETFLOW-EXP
		record PP-NETFLOW-REC
		cache timeout active 60
!
interface Port-channel1.[SUB-INTERFACE-ID]
ip flow monitor PP-NETFLOW-MONITOR input
ip flow monitor PP-NETFLOW-MONITOR output
